@using WareHouseSys.ViewModels
@model MaterialPickHeaderViewModel
@{
    ViewBag.Title = "AddMaterialPicking";
    Layout = "";
}

<style>
    .table > tbody > tr > td {
        border-top: 1px solid #2b2b2b;
    }

    .fileinput-button {
        position: relative;
        overflow: hidden;
    }

        .fileinput-button input {
            position: absolute;
            top: 0;
            right: 0;
            margin: 0;
            opacity: 0;
            -ms-filter: 'alpha(opacity=0)';
            font-size: 200px;
            direction: ltr;
            cursor: pointer;
        }

    .thumb {
        height: 80px;
        width: 100px;
        border: 1px solid #000;
    }

    ul.thumb-Images li {
        width: 120px;
        float: left;
        display: inline-block;
        vertical-align: top;
        height: 120px;
    }

    .img-wrap {
        position: relative;
        display: inline-block;
        font-size: 0;
    }

        .img-wrap .close {
            position: absolute;
            top: 2px;
            right: 2px;
            z-index: 100;
            background-color: #D0E5F5;
            padding: 5px 2px 2px;
            color: #000;
            font-weight: bolder;
            cursor: pointer;
            opacity: .5;
            font-size: 23px;
            line-height: 10px;
            border-radius: 50%;
        }

        .img-wrap:hover .close {
            opacity: 1;
            background-color: #ff0000;
        }

    .FileNameCaptionStyle {
        font-size: 12px;
    }
</style>
<form id="PickingAddForm">
    <input name="OrderNo" type="hidden" value="@ViewBag.OrderNo" />
    <table class="table" style="border-style:solid;border-width:2px">
        <tbody>
            <tr>
                <td colspan="4" style="font-weight:800;font-size:x-large" align="center">領料單資訊</td>
            </tr>
            <tr>
                <td class="tdstyle">
                    工單號
                </td>
                <td colspan="3">
                    @(Html.Kendo().ComboBox()
                          .Name("WorkNo")
                          .Placeholder("選擇工號")
                          .HtmlAttributes(new { style = "width:30%;" })
                          .Filter("contains")
                          .AutoBind(false)
                          .MinLength(3)
                          .Text(Model != null?Model.WorkNo:"")
                          .DataSource(source =>
                          {
                              source.Read(read =>
                              {
                                  read.Url("../api/Maintenance/GetWorkNo");
                              })
                              .ServerFiltering(true);
                          })
                           .Events(e =>
                            {
                                e.Change("WorkNoChange");
                            })
                    )
                    @* <input name="WorkNo" style="width:70%;border-color: #d2d6de;border: 1px solid #ccc;" value="@DateTime.Now.ToString("yyyy/MM/dd")" required>*@
                </td>
            </tr>
            <tr>
                <td class="tdstyle">
                    <font style="color:red">申請日期</font>
                </td>
                <td>
                    <input name="ApplyDateTime" style="width:70%;border-color: #d2d6de;border: 1px solid #ccc;" value="@(Model != null?Model.ApplyDateTime.ToString("yyyy/MM/dd"):DateTime.Now.ToString("yyyy/MM/dd"))" class="dateTime" required>
                </td>
                <td class="tdstyle">
                    領料人員
                </td>
                <td>
                    @{
                        string UserId;
                        if (Model != null)
                        {
                            UserId = Model.PickingManId;
                        }
                        else
                        {
                            UserId = ViewBag.UserId;
                        }
                    }
                    @(Html.Kendo().MultiColumnComboBox()
                                .Name("PickingMan")
                                .DataTextField("TMNAME")
                                .DataValueField("KEYNO")
                                .Filter("contains")
                                .FilterFields(new string[] { "TMNAME", "KEYNO" })
                                .Value(UserId)
                                .Columns(columns =>
                                {
                                    columns.Add().Field("TMNAME").Title("姓名").Width("200px");
                                    columns.Add().Field("KEYNO").Title("員工編號").Width("200px");
                                })
                                .HtmlAttributes(new { style = "width:100%;" })
                                .Height(400)
                                .DataSource(source => source
                                    .Custom()
                                    .Transport(transport => transport
                                    .Read(read =>
                                    {
                                        read.Url("../api/Employee/getEmployee");
                                    }))
                                )
                    )
                </td>
            </tr>
            <tr>
                <td class="tdstyle">
                    單位
                </td>
                <td colspan="3">

                    @{
                        string UnitId;
                        if (Model != null)
                        {
                            UnitId = Model.PickingUnitId;
                        }
                        else
                        {
                            UnitId = ViewBag.UnitId;
                        }
                    }
                    @(Html.Kendo().MultiColumnComboBox()
                                .Name("PickingUnit")
                                .DataTextField("UNITNAME")
                                .DataValueField("UNITNO")
                                .Filter("contains")
                                .FilterFields(new string[] { "UNITNAME", "UNITNO" })
                                .Value(UnitId)
                                .Columns(columns =>
                                {
                                   columns.Add().Field("UNITNAME").Title("單位").Width("500px");
                                   @* columns.Add().Field("KEYNO").Title("員工編號").Width("200px");*@
                                })
                                .HtmlAttributes(new { style = "width:100%;" })
                                .Height(400)
                                .DataSource(source => source
                                    .Custom()
                                    .Transport(transport => transport
                                    .Read(read =>
                                    {
                                        //read.Url("../api/Employee/getEmployee");
                                        read.Url("../api/Unit/getAllUnit");
                                    }))
                                )
                    )
                </td>
            </tr>
            <tr>
                <td class="tdstyle">
                    緊急領料
                </td>
                <td>
                    @(Html.Kendo().Switch()
                                        .Name("EmergencyPicking")
                                        .Messages(c => c.Checked("是").Unchecked("否"))
                                        .Checked((Model != null ? Model.EmergencyPicking:false))
                    )
                </td>
                <td class="tdstyle">
                    <font style="color:red">倉庫群組</font>
                </td>
                <td>
                    <select name="WGroupId">
                        @foreach (WareHouseSys.DBModels.WGroup wGroup in ViewBag.WGroups)
                        {
                            <option value="@wGroup.WGroupId">@wGroup.WGroupName</option>
                        }
                    </select>
                </td>
            </tr>
            <tr>
                <td class="tdstyle">
                    領料原因
                </td>
                <td colspan="3">
                    <textarea name="PickingReason" cols="50" rows="4" required validationMessage="領料原因不可為空白">@(Model != null?Model.PickingReason:"")</textarea>
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    <div style="width:1165px">
                        <div id="addPickingDataGrid" data-url="@Url.Content("../Picking/MaterialPickingBodyDetail")" data-updateurl="@Url.Content("../api/Picking/UpdateMaterialPickingBody")"></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    <div class="pull-right">
                        @if (Model == null)
                        {
                            <button id="BtnSavePicking" class="btn btn-danger" type="button" style="margin-left:10px"><i class="far fa-save"></i> 儲存</button>
                        }
                        else
                        {
                            <button id="BtnUpdatePicking" class="btn btn-danger" type="button" style="margin-left:10px"><i class="far fa-edit"></i> 修改</button>
                        }

                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</form>

