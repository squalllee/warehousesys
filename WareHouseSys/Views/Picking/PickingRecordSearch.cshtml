@using WareHouseSys.ViewModels
<style>
    .table > tbody > tr > td {
        border-top: 1px solid #2b2b2b;
    }

    .tdstyle {
        font-family: 標楷體;
        font-size: large;
        vertical-align: middle;
        border-style: solid;
        border-width: 0.5px;
        font-weight: 800;
        text-align: center;
        width: 15%;
        background-color: #D0CECF;
    }


</style>
<div class="row">
    <section class="content-header">
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> 查詢作業</a></li>
            <li class="active">發料記錄查詢</li>
        </ol>
    </section>
</div>

<input type="hidden" value="@Url.Action("getAttatchment","Picking")" id="baseUrl"/>
<script>

function grid_filterMenuInit(e) {
    if (e.field == "OutBoundDate") {
        var logicDropDown = e.container.find("select:eq(1)").data("kendoDropDownList");
        var or = logicDropDown.dataSource.at(1);
        logicDropDown.dataSource.remove(or);
        //e.container.find("input:eq(0)").data("kendoDatePicker").enable(false);
    }
@*
    else if (e.field == "PickedQty")
    {
        //$(e.container.find("input:eq(1)")).kendoNumericTextBox({
        //    min: 0
        //});
        //$(e.container.find("input:eq(2)")).data("kendoTextBox").enable(false);
        //$(".actualGrid :input:eq(4)").kendoNumericTextBox({
        //    min: 0
        //});
        var logicDropDown = e.container.find("select:eq(1)").data("kendoDropDownList");
        var and = logicDropDown.dataSource.at(0);
        logicDropDown.dataSource.remove(and);
        //logicDropDown.select(0);
        logicDropDown.enable(false);

        var logicDropDown1 = e.container.find("select:eq(2)").data("kendoDropDownList");
        //logicDropDown.select(0);
        logicDropDown1.enable(false);
        e.container.find("input:eq(3)").data("kendoNumericTextBox").enable(false);
        //$("#textbox").kendoTextBox();
        //var textbox = $("#textbox").data("kendoTextBox");
        //textbox.enable(false);
    }
    else if (e.field == "OrderNo") {
        //$(e.container.find("input:eq(1)")).kendoNumericTextBox({
        //    min: 0
        //});
        //$(e.container.find("input:eq(2)")).data("kendoTextBox").enable(false);
        //$(".actualGrid :input:eq(4)").kendoNumericTextBox({
        //    min: 0
        //});
        var logicDropDown = e.container.find("select:eq(1)").data("kendoDropDownList");
        var and = logicDropDown.dataSource.at(0);
        logicDropDown.dataSource.remove(and);
        //logicDropDown.select(0);
        logicDropDown.enable(false);

        var logicDropDown1 = e.container.find("select:eq(2)").data("kendoDropDownList");
        //logicDropDown.select(0);
        logicDropDown1.enable(false);
        e.container.find("input:eq(1)").data("kendoTextBox").enable(false);
        //e.container.find("input:eq(2)").data("kendoTextBox").enable(false);
        //e.container.find("input:eq(3)").data("kendoTextBox").enable(false);
        //e.container.find("input:eq(4)").data("kendoTextBox").enable(false);
        //e.container.find("input:eq(5)").data("kendoTextBox").enable(false);
        //e.container.find("input:eq(6)").data("kendoTextBox").enable(false);
        //e.container.find("input:eq(7)").data("kendoTextBox").enable(false);
        //e.container.find("input:eq(8)").data("kendoTextBox").enable(false);
        //e.container.find("input)").eq(0).data("kendoTextBox").enable(false);
        //$(e.container.find("input")).eq(0).data("kendoTextBox").enable(false);
        //$("#textbox").kendoTextBox();
        //var textbox = $("#textbox").data("kendoTextBox");
        //textbox.enable(false);
    }
    else
    {
        var logicDropDown = e.container.find("select:eq(1)").data("kendoDropDownList");
        var and = logicDropDown.dataSource.at(0);
        logicDropDown.dataSource.remove(and);
        //logicDropDown.select(0);
        logicDropDown.enable(false);

        var logicDropDown1 = e.container.find("select:eq(2)").data("kendoDropDownList");
        //logicDropDown.select(0);
        logicDropDown1.enable(false);
        //e.container.find("input:eq(5)").data("kendoTextBox").enable(false);
        e.container.find("input:eq(0)").data("kendoTextBox").enable(false);
        //var logicInput = e.container.find("input:eq(1)").data("kendoTextBox");
        //logicDropDown.select(0);
        //logicInput.enable(false);
        //$(e.container.find("input:eq(1)")).kendoTextBox({
        //    enable: false
        //});
    }
    *@
}

</script>

    @(Html.Kendo().Grid<PickingSearchViewModel>()
            .Name("grid")
            .Columns(columns =>
            {
                columns.Bound(c => c.OrderNo).Width(180).Title("領料單號");
                columns.Bound(c => c.WorkNo).Width(180).Title("工單單號");
                columns.Bound(c => c.OutBoundDate).Width(180).Title("領料日期").ClientTemplate("#= kendo.toString(OutBoundDate, 'yyyy/MM/dd')==null?'':kendo.toString(OutBoundDate, 'yyyy/MM/dd') #").Filterable(filter => filter.Extra(true));
                columns.Bound(c => c.UNITNAME).Width(300).Title("單位");
                columns.Bound(c => c.TMNAME).Width(150).Title("領料人員");
                columns.Bound(c => c.OutBoundMan).Width(150).Title("發料人員");
                columns.Bound(c => c.MaterialNo).Width(180).Title("料號");
                columns.Bound(c => c.MaterialName).Width(150).Title("品名");
                columns.Bound(c => c.Spec).Width(300).Title("規格");
                columns.Bound(c => c.Lot).Width(180).Title("批號");
                columns.Bound(c => c.PickedQty).Width(80).Title("數量");
                columns.Bound(c => c.EmergencyPicking).Width(150).Title("緊急領料");
                columns.Bound(c => c.StorageId).Width(150).Title("出庫儲位");
                columns.Bound(c => c.AttUrl).Width(80).Title("附件").Filterable(false).Sortable(false).ClientTemplate("<div name='attatchment' class='btn-group dropleft'></div>");
                columns.Bound(c => c.Status).Width(80).Title("狀態");
            })
            .HtmlAttributes(new { style = "height: 750px;" })
            .Scrollable()
            .Resizable(resize => resize.Columns(true))
            .Sortable()
              .ToolBar(tools =>
              {
                  tools.Excel();
              })
                    .Excel(excel => excel
                    .FileName("WorkInfo.xlsx")
                    .Filterable(true)
                    .AllPages(true)
                )

             .Filterable(filterable => filterable
                 .Extra(false)
                 .Messages(m => m
                    .Clear("清除")
                    .Filter("過濾")
                    .Info("輸入要搜尋的值"))
                 .Operators(operators => operators

                     .ForDate(options1 => options1

                         .Clear()
                         .IsGreaterThanOrEqualTo("大於等於")
                         .IsLessThanOrEqualTo("小於等於")
                     )
                     .ForString(options2 => options2

                         .Clear()
                         .IsEqualTo("等於")
                         .Contains("包含")
                     )
                    .ForNumber(str => str
                               .Clear()
                               .IsEqualTo("相等")
                               .IsGreaterThan("大於")
                               .IsLessThan("小於")
                               .IsGreaterThanOrEqualTo("大於等於")
                               .IsLessThanOrEqualTo("小於等於")
                    )
                 )
             )
             @*
             .Filterable(filterable =>
             {
                 filterable.Operators(operators =>
                 {
                     operators.ForDate(options =>
                     {
                         options.Clear();
                         options.IsGreaterThanOrEqualTo("大於等於");
                         options.IsLessThanOrEqualTo("小於等於");
                     });
                     operators.ForString(options =>
                     {
                         options.Clear().IsEqualTo("等於").Contains("包含");
                     });

                 });
             })
            *@
            .Pageable(pageable => pageable
                          .Messages(m => m
                                 .Last("最末頁")
                                 .First("第一頁")
                                 .Next("下一頁")
                                 .Previous("上一頁")
                                 .MorePages("更多頁")
                                 .ItemsPerPage("每頁筆數")
                                 .Display("第 {0} - {1} 筆 共 {2} 筆記錄")
                                 .Refresh("重新整理")
                                 .Empty("沒有符合記錄")
                                 .AllPages("全部")
                           )
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5)
            .PageSizes(new List<object>
                { 20, 30, 40, 50, "All"}))
            .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("PickingRecordSearchGrid", "Picking"))
            .PageSize(20)

            )
            .Events(events => events
                .DataBound("onGridDataBound")
            )
            .Events(events => events
                .FilterMenuInit("grid_filterMenuInit")
            )
)

    <div id="ScrapDetailDialog"></div>

    @section scripts{
        <script src="~/PageJs/PickingRecordSearch.js?ver=@DateTime.Now.ToString("yyyyMMddmmss")"></script>


    }
