@using WareHouseSys.ViewModels
@model LendHeaderViewModel
@{
    ViewBag.Title = "新增借料單";
    Layout = "";
}

<style>
    .table > tbody > tr > td {
        border-top: 1px solid #2b2b2b;
    }

    .thumb {
        height: 80px;
        width: 100px;
        border: 1px solid #000;
    }

    ul.thumb-Images li {
        width: 120px;
        float: left;
        display: inline-block;
        vertical-align: top;
        height: 120px;
    }

    .img-wrap {
        position: relative;
        display: inline-block;
        font-size: 0;
    }

        .img-wrap .close {
            position: absolute;
            top: 2px;
            right: 2px;
            z-index: 100;
            background-color: #D0E5F5;
            padding: 5px 2px 2px;
            color: #000;
            font-weight: bolder;
            cursor: pointer;
            opacity: .5;
            font-size: 23px;
            line-height: 10px;
            border-radius: 50%;
        }

        .img-wrap:hover .close {
            opacity: 1;
            background-color: #ff0000;
        }

    .FileNameCaptionStyle {
        font-size: 12px;
    }
</style>

@{
    string UserName = ViewBag.UserName.Trim();
    string UserId = ViewBag.UserId.Trim();
}

<form id="LendModifyForm" data-saveurl="@Url.Content("../api/Lend/doLend")" >
    <input type="hidden" name="OrderNo" value="@(Model == null?"":Model.OrderNo)" />
    <table class="table" style="border-style:solid;border-width:2px">
        <tbody>
            <tr>
                <td colspan="4" style="font-weight:800;font-size:x-large" align="center">借料單資訊</td>
            </tr>
            <tr>
                <td class="tdstyle">
                    申請人員
                </td>
                <td>
                    @(Html.Kendo().MultiColumnComboBox()
                                        .Name("LendMan")
                                        .Enable(false)
                                        .DataTextField("TMNAME")
                                        .DataValueField("KEYNO")
                                        .Filter("contains")
                                        .FilterFields(new string[] { "TMNAME", "KEYNO" })
                                        .Value(Model.LendManId)
                                        .Columns(columns =>
                                        {
                                            columns.Add().Field("TMNAME").Title("姓名").Width("100");
                                            columns.Add().Field("KEYNO").Title("員工編號").Width("100");
                                        })
                                        .HtmlAttributes(new { style = "width:50%;", required = true, validationMessage = "申請人必需選擇" })
                                        .Height(400)
                                        .DataSource(source => source
                                            .Custom()
                                            .Transport(transport => transport
                                            .Read(read =>
                                            {
                                                read.Url("../api/Employee/getEmployeeUnit");
                                            }))
                                        )
                    )
                </td>
                <td class="tdstyle">
                    <font style="color:red">倉庫群組</font>
                </td>
                <td>
                    <select name="WGroupId">
                        @foreach (WareHouseSys.DBModels.WGroup wGroup in ViewBag.WGroups)
                        {
                            <option value="@wGroup.WGroupId">@wGroup.WGroupName</option>
                        }
                    </select>
                </td>
            </tr>
            <tr>
                <td class="tdstyle">
                    發料人員
                </td>
                <td>
                    
                    @(Html.Kendo().MultiColumnComboBox()
                                                .Name("OutBoundMan")
                                                .DataTextField("TMNAME")
                                                .DataValueField("KEYNO")
                                                .Filter("contains")
                                                .FilterFields(new string[] { "TMNAME", "KEYNO" })
                                                .Text(Model == null ? UserName : UserName)
                                                .Value(Model == null ? UserId : UserId)
                                                .Columns(columns =>
                                                {
                                                    columns.Add().Field("TMNAME").Title("姓名").Width("100");
                                                    columns.Add().Field("KEYNO").Title("員工編號").Width("100");
                                                })
                                                .HtmlAttributes(new { style = "width:50%;", required = true, validationMessage = "申請人必需選擇" })
                                                .Height(400)
                                                .DataSource(source => source
                                                    .Custom()
                                                    .Transport(transport => transport
                                                    .Read(read =>
                                                    {
                                                        read.Url("../api/Employee/getEmployeeUnit");
                                                    }))
                                                )
                    )
                </td>
                <td class="tdstyle">
                    發料日期
                </td>
                <td>
                    <input name="OutBoundDate" value="@(Model.OutBoundDate == null? @DateTime.Now.ToString("yyyy/MM/dd"):DateTime.Parse(Model.OutBoundDate.ToString()).ToString("yyyy/MM/dd"))" class="dateTime" required />
                </td>
            </tr>
            <tr>
                <td class="tdstyle">
                    借料期限
                </td>
                <td colspan="3">
                    <input name="Deadline" value="@DateTime.Parse(Model.Deadline.ToString()).ToString("yyyy/MM/dd")" class="dateTime" required />
                </td>
            </tr>
            <tr>
                <td class="tdstyle">
                    借料原因
                </td>
                <td>
                    @(Html.Kendo().ComboBox()
                                       .Value((Model == null ? "" : Model.Reason))
                                     .Name("Reason")
                                     .Placeholder("選擇借料原因")
                                     .BindTo(new List<string>() {
                                                      "因執行捷運工程於保固期維修",
                                                      "定期品質檢驗測試",
                                                      "定期保養",
                                                      "系統故障分析",
                                                      "產品開發",
                                                      "教學訓練",
                                                      "其它"
                                     })
                                     .SelectedIndex(0)
                                     .HtmlAttributes(new { style = "width:100%;", required = true, validationMessage = "需求單位不可為空白" })

                    )
                    @*<textarea name="Reason" cols="50" rows="5" readonly>@(Model == null? "":Model.Reason)</textarea>*@
                </td>
                <td class="tdstyle">
                    原因說明
                </td>
                <td>
                    <input name="OtherReason" type="text" value="@(Model == null ? "" : Model.OtherReason)" required validationMessage="其它原因不可為空白">
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    <div style="width:950px">
                        <div id="doLendGrid" data-url="@Url.Content("../Lend/LendBodyViewModel")?OrderNo=@(Model == null?"":Model.OrderNo)" data-updateurl="@Url.Content("../api/Lend/doLendBodyUpdate")"></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="tdstyle">
                    附件上傳<img id="imgFileOpen" src="../images/plus.png" style="width: 10%; cursor: pointer; vertical-align: middle;" />
                </td>
                <td colspan="3">
                    <output id="Filelist"></output>
                    <input type="file" name="files[]" id="files" multiple accept="application/pdf," style="display:none">
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    <div class="pull-right">
                        <button id="BtnSaveLend" class="btn btn-default" type="button" style="margin-left:10px"><i class="far fa-save"></i> 儲存</button>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</form>