@using WareHouseSys.ViewModels
@model LendHeaderViewModel
@{
    ViewBag.Title = "新增借料單";
    Layout = "";
}

<style>
    .table > tbody > tr > td {
        border-top: 1px solid #2b2b2b;
    }
</style>

<form id="LendAddForm" data-saveurl="@Url.Content("../api/Lend/SaveLend")" data-updateurl="@Url.Content("../api/Lend/UpdateLendHeader")">
    <input type="hidden" name="OrderNo" value="@(Model == null?"":Model.OrderNo)" />
    <table class="table" style="border-style:solid;border-width:2px">
        <tbody>
            <tr>
                <td colspan="4" style="font-weight:800;font-size:x-large" align="center">借料單資訊</td>
            </tr>
            <tr>
                <td class="tdstyle">
                    申請人員
                </td>
                <td>
                    @{
                        string UserName = ViewBag.UserName;
                        string UserId = ViewBag.UserId;
                    }
                    @(Html.Kendo().MultiColumnComboBox()
                                                                        .Name("LendMan")
                                                                        .DataTextField("TMNAME")
                                                                        .DataValueField("KEYNO")
                                                                        .Filter("contains")
                                                                        .FilterFields(new string[] { "TMNAME", "KEYNO" })
                                                                        .Text(Model == null ? UserName : Model.LendMan)
                                                                        .Value(Model == null ? UserId : Model.LendManId)
                                                                        .Columns(columns =>
                                                                        {
                                                                            columns.Add().Field("TMNAME").Title("姓名").Width("100");
                                                                            columns.Add().Field("KEYNO").Title("員工編號").Width("100");
                                                                        })
                                                                        .HtmlAttributes(new { style = "width:50%;", required = true, validationMessage = "申請人必需選擇" })
                                                                        .Height(400)
                                                                        .DataSource(source => source
                                                                            .Custom()
                                                                            .Transport(transport => transport
                                                                            .Read(read =>
                                                                            {
                                                                                read.Url("../api/Employee/getEmployeeUnit");
                                                                            }))
                                                                        )
                    )
                </td>
                <td class="tdstyle">
                    <font style="color:red">倉庫群組</font>
                </td>
                <td>
                    <select name="WGroupId">
                        @foreach (WareHouseSys.DBModels.WGroup wGroup in ViewBag.WGroups)
                        {
                            <option value="@wGroup.WGroupId">@wGroup.WGroupName</option>
                        }
                    </select>
                </td>
            </tr>
            <tr>
                <td class="tdstyle">
                    單位
                </td>
                <td colspan="3">

                    @{
                        string UnitId;                        
                        if (Model != null)
                        {
                            UnitId = Model.LendUnitId;
                        }
                        else
                        {
                            UnitId = ViewBag.UnitId;
                        }
                    }
                    @(Html.Kendo().MultiColumnComboBox()
                                .Name("LendUnit")
                                .DataTextField("UNITNAME")
                                .DataValueField("UNITNO")
                                .Filter("contains")
                                .FilterFields(new string[] { "UNITNAME", "UNITNO" })
                                .Value(UnitId)
                                .Columns(columns =>
                                {
                                   columns.Add().Field("UNITNAME").Title("單位").Width("500px");
                                   @* columns.Add().Field("KEYNO").Title("員工編號").Width("200px");*@
                                })
                                .HtmlAttributes(new { style = "width:100%;" })
                                .Height(400)
                                .DataSource(source => source
                                    .Custom()
                                    .Transport(transport => transport
                                    .Read(read =>
                                    {
                                        //read.Url("../api/Employee/getEmployee");
                                        read.Url("../api/Unit/getAllUnit");
                                    }))
                                )
                    )
                </td>
            </tr>
            <tr>
                <td class="tdstyle">
                    借料期限
                </td>
                <td colspan="3">
                    <input name="Deadline" value="@(Model == null? null:DateTime.Parse(Model.Deadline.ToString()).ToString("yyyy/MM/dd"))" class="dateTime" required />
                </td>
            </tr>
            <tr>
                <td class="tdstyle">
                    借料原因
                </td>
                <td>
                    @(Html.Kendo().ComboBox()
                        .Value((Model == null ? "" : Model.Reason))
                      .Name("Reason")
                      .Placeholder("選擇借料原因")
                      .BindTo(new List<string>() {
                              "因執行捷運工程於保固期維修",
                              "定期品質檢驗測試",
                              "定期保養",
                              "系統故障分析",
                              "產品開發",
                              "教學訓練",
                              "其它"
                      })
                      .SelectedIndex(0)
                      .HtmlAttributes(new { style = "width:100%;", required=true, validationMessage = "需求單位不可為空白" })

                    )
                </td>
                <td class="tdstyle">
                    說明
                </td>
                <td>
                    <input name="OtherReason" type="text" value="@(Model == null ? "" : Model.OtherReason)" required validationMessage="其它原因不可為空白">
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    <div style="width:950px">
                        <div id="LendDetailUpdateGrid" data-url="@Url.Content("../Lend/LendBodyViewModel")?OrderNo=@(Model == null?"":Model.OrderNo)" data-updateurl="@Url.Content("../api/Lend/LendBodyUpdate")" data-deleteurl="@Url.Content("../api/Lend/LendBodyDelete")" data-addurl="@Url.Content("../api/Lend/LendBodyAdd")"></div>
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan="4">
                    <div class="pull-right">
                        <button id="BtnSaveLend" class="btn btn-default" type="button" style="margin-left:10px"><i class="far fa-save"></i> 儲存</button>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</form>

