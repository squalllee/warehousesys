@using WareHouseSys.ViewModels
@{
    ViewBag.Title = "預估需求單新增作業";

}
<style>
    .tdstyle {
        font-family: 標楷體;
        font-size: large;
        vertical-align: middle;
        border-style: solid;
        border-width: 0.5px;
        font-weight: 800;
        text-align: center;
        width: 15%;
        background-color: #D0CECF;
    }

    .ui-dialog {
        z-index: 1000 !important;
    }

    body {
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    }

    .k-grid tr td {
        overflow: visible;
    }

    .k-confirm .k-window-titlebar::before,
    .k-alert .k-window-titlebar::before {
        content: '警告';
        font-weight: bold;
    }

    .k-confirm .k-window-titlebar .k-dialog-title {
        visibility: collapse;
    }

    .k-dialog .k-window-titlebar .k-dialog-title {
        visibility: hidden;
    }
</style>


<div class="row">
    <section class="content-header">
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i>預估需求作業</a></li>
            <li class="active">預估需求新增作業</li>
        </ol>
    </section>
</div>
<button id="EstDemandAddBtn" class="btn btn-danger">新增預估需求單</button>

@(Html.Kendo().Grid<DemandHeaderViewModel>()
                                .Name("grid")
                                .Columns(columns =>
                                {
                                    columns.Bound(c => c.OrderNo).Title("單號").ClientTemplate("<span style='cursor: pointer' onclick='openDetail(this);'><font style='color:blue'>#=OrderNo#</font></span>").Width(150);
                                    columns.Bound(c => c.Annual).Title("年度");
                                    columns.Bound(c => c.Season).Title("季");
                                    columns.Bound(c => c.AddDateTime).Title("申請日期").ClientTemplate("#=kendo.toString(AddDateTime, 'yyyy/MM/dd')#"); ;
                                    columns.Bound(c => c.ApplyUnit).Title("申請單位");
                                    columns.Bound(c => c.ApplyMan).Title("申請人");
                                    columns.Bound(c => c.Status).Title("狀態");
                                    columns.Bound(c => c.Status).Title("動作").Filterable(false).Sortable(false).ClientTemplate("<div name='ActionList' class='btn-group dropleft'></div>");
                                })
                            .HtmlAttributes(new { style = "height: 750px;" })
                            .Scrollable()
                            .Sortable()
                            .Filterable()
                            .Pageable(pageable => pageable
                            .Refresh(true)
                            .PageSizes(true)
                            .ButtonCount(5))
                            .Filterable(filterable => filterable
                            .Extra(false)
                            .Operators(operators => operators
                                .ForString(str => str.Clear()
                                    .IsEqualTo("等於")
                                    .Contains("包含")
                                )
                                .ForDate(str => str.Clear()
                                .IsEqualTo("等於")))
                            )
                            .Events(events => events
                            .DataBound("onGridDataBound")
                            )
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Model(model => model.Id(p => p.OrderNo))
                                .Read(read => read.Action("EstDemandSearchGrid", "EstDemand"))

                                .Events(events => events.Error("error_handler"))
                                .PageSize(20)

                            )

)

@section scripts{
    <script src="~/PageJs/EstDemandSearch.js?ver=@DateTime.Now.ToString("yyyyMMddmmss")"></script>
    <script src="~/PageJs/EstDemandAdd.js?ver=@DateTime.Now.ToString("yyyyMMddmmss")"></script>
    <script src="~/PageJs/EstDemandDetail.js?ver=@DateTime.Now.ToString("yyyyMMddmmss")"></script>
}
